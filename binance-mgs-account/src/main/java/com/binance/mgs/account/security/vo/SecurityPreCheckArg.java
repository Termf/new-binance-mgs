package com.binance.mgs.account.security.vo;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import lombok.Data;

import javax.validation.constraints.NotBlank;

/**
 * @author Men Huatao (alex.men@binance.com)
 * @date 2021/12/6
 */
@Data
@ApiModel(value = "SecurityPreCheckArg",
        description = "These parameters will be bound to sessionId. Missing or over-passing parameters will cause the subsequent process to fail. Please only pass parameters that will be used throughout the process")
public class SecurityPreCheckArg {
    @NotBlank
    @ApiModelProperty(required = true, allowableValues = "login,register,forget_password,create_apikey,refresh_access_token,third_login")
    private String bizType;
    @ApiModelProperty(name = "email")
    private String email;
    @ApiModelProperty(name = "mobile")
    private String mobile;
    @ApiModelProperty(name = "mobileCode")
    private String mobileCode;
    @ApiModelProperty(name = "refreshToken", notes = "refresh access token")
    private String refreshToken;
    @ApiModelProperty(name = "region", notes = "only required for EU register and should fill countryCode")
    private String region;
    @ApiModelProperty(name = "subUserEmail")
    private String subUserEmail;
    @ApiModelProperty(name = "idToken", notes = "third login idToken")
    private String idToken;
    @ApiModelProperty(name = "code", notes = "auto generated by backend")
    private String code; // ip+设备信息

    @ApiModelProperty(name = "cs",notes = "captureStatus -1=default 0=没失败 1=bcaptcha 失败。2=geetest失败 3=recaptcha失败")
    private int cs = -1;

    @ApiModelProperty(name = "bcaptcah2参数")
    private String secCheckToken;

    @ApiModelProperty(name = "attestKeyId", notes = "Apple AppAttest keyId")
    private String attestKeyId;
}
